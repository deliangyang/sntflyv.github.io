import{_ as s,c as n,o as a,a as l}from"./app.0ce55433.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"astfold_body body \u4EE3\u7801\u5757\u6298\u53E0\u4F18\u5316","slug":"astfold-body-body-\u4EE3\u7801\u5757\u6298\u53E0\u4F18\u5316","link":"#astfold-body-body-\u4EE3\u7801\u5757\u6298\u53E0\u4F18\u5316","children":[]},{"level":3,"title":"astfold_stmt \u8BED\u53E5\u6298\u53E0\u4F18\u5316","slug":"astfold-stmt-\u8BED\u53E5\u6298\u53E0\u4F18\u5316","link":"#astfold-stmt-\u8BED\u53E5\u6298\u53E0\u4F18\u5316","children":[]},{"level":3,"title":"astfold_expr \u8868\u8FBE\u5F0F\u6298\u53E0\u4F18\u5316","slug":"astfold-expr-\u8868\u8FBE\u5F0F\u6298\u53E0\u4F18\u5316","link":"#astfold-expr-\u8868\u8FBE\u5F0F\u6298\u53E0\u4F18\u5316","children":[]},{"level":3,"title":"\u7B80\u5355\u4E86\u89E3\u4E00\u4E0B fold_binop \u7684\u5B9E\u73B0","slug":"\u7B80\u5355\u4E86\u89E3\u4E00\u4E0B-fold-binop-\u7684\u5B9E\u73B0","link":"#\u7B80\u5355\u4E86\u89E3\u4E00\u4E0B-fold-binop-\u7684\u5B9E\u73B0","children":[]},{"level":3,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3","link":"#\u603B\u7ED3","children":[]}],"relativePath":"t/\u7F16\u7A0B\u8BED\u8A00/python/Python\u5185\u6838\u6E90\u7801\u89E3\u6790/python-ast\u4F18\u5316.md","lastUpdated":1729589704000}'),p={name:"t/\u7F16\u7A0B\u8BED\u8A00/python/Python\u5185\u6838\u6E90\u7801\u89E3\u6790/python-ast\u4F18\u5316.md"},o=l(`<p>\u4EE3\u7801\u4F18\u5316\u5206\u4E3A\u524D\u7AEF\u4F18\u5316\u548C\u540E\u7AEF\u4F18\u5316\u3002\u524D\u7AEF\u4F18\u5316\u662F\u6307\u5728\u6E90\u4EE3\u7801\u5C42\u9762\u8FDB\u884C\u4F18\u5316\uFF0C\u4F8B\u5982\u8BED\u6CD5\u6811\u4F18\u5316\u3001\u4E2D\u95F4\u4EE3\u7801\u4F18\u5316\u7B49\u3002\u540E\u7AEF\u4F18\u5316\u662F\u6307\u5728\u76EE\u6807\u4EE3\u7801\u5C42\u9762\u8FDB\u884C\u4F18\u5316\uFF0C\u4F8B\u5982\u673A\u5668\u7801\u4F18\u5316\u7B49\u3002</p><p>Python AST \u8BED\u6CD5\u6811\u4F18\u5316\u7684\u5B9E\u73B0\u5728\u6587\u4EF6 Python/ast_opt.c \u4E2D\uFF0C\u4E3B\u8981\u662F\u901A\u8FC7\u8C03\u7528 PyAST_Optimize \u51FD\u6570\u6765\u5B9E\u73B0\u3002PyAST_Optimize \u51FD\u6570\u7684\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">_PyAST_Optimize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">mod_ty </span><span style="color:#A6ACCD;">mod</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arena</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    PyThreadState </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">tstate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> recursion_limit </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Py_GetRecursionLimit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> starting_recursion_depth</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    /* Setup recursion depth check counters */</span></span>
<span class="line"><span style="color:#F07178;">    tstate </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">_PyThreadState_GET</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#F07178;">tstate</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">    /* Be careful here to prevent overflow. */</span></span>
<span class="line"><span style="color:#F07178;">    starting_recursion_depth </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tstate</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_depth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> INT_MAX </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> COMPILER_STACK_FRAME_SCALE</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">tstate</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_depth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> COMPILER_STACK_FRAME_SCALE </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tstate</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_depth</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_depth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> starting_recursion_depth</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_limit</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">recursion_limit </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> INT_MAX </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> COMPILER_STACK_FRAME_SCALE</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span></span>
<span class="line"><span style="color:#F07178;">        recursion_limit </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> COMPILER_STACK_FRAME_SCALE </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> recursion_limit</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> ret </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">astfold_mod</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mod</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> arena</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> state</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ret </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PyErr_Occurred</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    /* Check that the recursion depth counting balanced correctly */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ret </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_depth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> starting_recursion_depth</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">PyErr_Format</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">PyExc_SystemError</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">AST optimizer recursion depth mismatch (before=%d, after=%d)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            starting_recursion_depth</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_depth</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> ret</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><code>astfold_mod</code> \u51FD\u6570\u662F AST \u4F18\u5316\u7684\u6838\u5FC3\u51FD\u6570\uFF0C\u5BF9 body\uFF0Cstmt\uFF0Cexpr \u7B49\u8282\u70B9\u8FDB\u884C\u4F18\u5316\u3002\u5176\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">astfold_mod</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">mod_ty </span><span style="color:#A6ACCD;">node_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ctx_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> Module_kind</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_body</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> asdl_seq</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.Module.body</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> Interactive_kind</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL_SEQ</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_stmt</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> stmt</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.Interactive.body</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> Expression_kind</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_expr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> expr_ty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.Expression.body</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// The following top level nodes don&#39;t participate in constant folding</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> FunctionType_kind</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// No default case, so the compiler will emit a warning if new top level</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// compilation nodes are added without being handled here</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5982\u679C\u8BED\u6CD5\u6811\u8282\u70B9\u7684\u7C7B\u578B\u662F Module_kind\uFF0C\u90A3\u4E48\u8C03\u7528 astfold_body \u51FD\u6570\u3002\u5982\u679C\u8BED\u6CD5\u6811\u7684\u7C7B\u578B\u662F Interactive_kind\uFF0C\u90A3\u4E48\u8C03\u7528 astfold_stmt \u51FD\u6570\u3002\u5982\u679C\u8BED\u6CD5\u6811\u7684\u7C7B\u578B\u662F Expression_kind\uFF0C\u90A3\u4E48\u8C03\u7528 astfold_expr \u51FD\u6570\u3002</p><p>\u8BED\u6CD5\u6811\u7684\u4F18\u5316\u662F\u901A\u8FC7\u5C06\u8BED\u6CD5\u6811\u7684\u8282\u70B9\u8FDB\u884C\u6298\u53E0\uFF08\u6298\u53E0\u65E0\u6548\uFF0C\u7D2F\u8D58\uFF0C\u91CD\u590D\uFF0C\u53EF\u7F16\u8BD1\u65F6\u8BA1\u7B97\u7684\u8282\u70B9\uFF09\uFF0C\u4ECE\u800C\u51CF\u5C11\u8BED\u6CD5\u6811\u7684\u8282\u70B9\uFF0C\u6700\u7EC8\u8FBE\u5230\u51CF\u5C11\u6267\u884C\u6307\u4EE4\u7684\u76EE\u7684\u3002</p><h3 id="astfold-body-body-\u4EE3\u7801\u5757\u6298\u53E0\u4F18\u5316" tabindex="-1">astfold_body body \u4EE3\u7801\u5757\u6298\u53E0\u4F18\u5316 <a class="header-anchor" href="#astfold-body-body-\u4EE3\u7801\u5757\u6298\u53E0\u4F18\u5316" aria-hidden="true">#</a></h3><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">astfold_body</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">asdl_stmt_seq </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">stmts</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ctx_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> docstring </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">_PyAST_GetDocString</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">stmts</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">CALL_SEQ</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_stmt</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> stmt</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> stmts</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#F07178;">docstring </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">_PyAST_GetDocString</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">stmts</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        stmt_ty st </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">stmt_ty</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">asdl_seq_GET</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">stmts</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        asdl_expr_seq </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">values </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">_Py_asdl_expr_seq_new</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> ctx_</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#F07178;">values</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">asdl_seq_SET</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">values</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Expr</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        expr_ty expr </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">_PyAST_JoinedStr</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">values</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">lineno</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">col_offset</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                                        </span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">end_lineno</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">end_col_offset</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                                        ctx_</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#F07178;">expr</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Expr</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> expr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><code>astfold_body</code> \u51FD\u6570\u7684\u4F5C\u7528\u662F\u5BF9\u8BED\u6CD5\u6811\u7684 body \u8FDB\u884C\u4F18\u5316\uFF0C\u5982\u679C body \u4E2D\u5305\u542B docstring\uFF0C\u90A3\u4E48\u8C03\u7528 _PyAST_GetDocString \u51FD\u6570\u83B7\u53D6 docstring\uFF1B\u7136\u540E\u8C03\u7528 astfold_stmt \u51FD\u6570\u5BF9 body \u8FDB\u884C\u4F18\u5316\uFF1B\u6700\u540E\uFF0C\u5982\u679C body \u4E2D\u5305\u542B docstring\uFF0C\u90A3\u4E48\u8C03\u7528 _PyAST_JoinedStr \u51FD\u6570\u5BF9 docstring \u8FDB\u884C\u4F18\u5316\u3002</p><p>body \u91CC\u9762\u7684\u6BCF\u4E00\u4E2A\u8282\u70B9\u90FD\u4F1A\u8C03\u7528 astfold_stmt \u51FD\u6570\u8FDB\u884C\u4F18\u5316\u3002\u8FD9\u662F\u4E00\u4E2A\u9012\u5F52\u7684\u8FC7\u7A0B\uFF0C\u76F4\u5230\u6240\u6709\u7684\u8282\u70B9\u90FD\u88AB\u4F18\u5316\u3002</p><h3 id="astfold-stmt-\u8BED\u53E5\u6298\u53E0\u4F18\u5316" tabindex="-1">astfold_stmt \u8BED\u53E5\u6298\u53E0\u4F18\u5316 <a class="header-anchor" href="#astfold-stmt-\u8BED\u53E5\u6298\u53E0\u4F18\u5316" aria-hidden="true">#</a></h3><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">astfold_stmt</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">stmt_ty </span><span style="color:#A6ACCD;">node_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ctx_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(++</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_depth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_limit</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">PyErr_SetString</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">PyExc_RecursionError</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">maximum recursion depth exceeded during compilation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> FunctionDef_kind</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_arguments</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> arguments_ty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.FunctionDef.args</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_body</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> asdl_seq</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.FunctionDef.body</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL_SEQ</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_expr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> expr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.FunctionDef.decorator_list</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!(</span><span style="color:#F07178;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">ff_features </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> CO_FUTURE_ANNOTATIONS</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">CALL_OPT</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_expr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> expr_ty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FunctionDef</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">returns</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><code>astfold_stmt</code> \u51FD\u6570\u7684\u4F5C\u7528\u662F\u5BF9\u8BED\u6CD5\u6811\u7684 stmt \u8FDB\u884C\u4F18\u5316\uFF0C\u5982\u679C stmt \u7684\u7C7B\u578B\u662F FunctionDef_kind\uFF0C\u90A3\u4E48\u8C03\u7528 astfold_arguments \u51FD\u6570\u5BF9 args \u8FDB\u884C\u4F18\u5316\uFF0C\u8C03\u7528 astfold_body \u51FD\u6570\u5BF9 body \u8FDB\u884C\u4F18\u5316\uFF0C\u8C03\u7528 astfold_expr \u51FD\u6570\u5BF9 decorator_list \u8FDB\u884C\u4F18\u5316\uFF0C\u5982\u679C\u6CA1\u6709 CO_FUTURE_ANNOTATIONS\uFF0C\u90A3\u4E48\u8C03\u7528 astfold_expr \u51FD\u6570\u5BF9 returns \u8FDB\u884C\u4F18\u5316\u3002</p><p>stmt \u7684\u4F18\u5316\u662F\u901A\u8FC7\u8282\u70B9\u7C7B\u578B\u7684\u6570\u636E\u7ED3\u6784\u8FDB\u884C\u9010\u6B65\u4F18\u5316\uFF0C\u8FD9\u4E5F\u662F\u4E00\u4E2A\u9012\u5F52\u7684\u8FC7\u7A0B\uFF0C\u76F4\u5230\u6240\u6709\u7684\u8282\u70B9\u90FD\u88AB\u4F18\u5316\u3002\u4F8B\u5982 if \u5305\u542B test, body, orelse \u4E09\u4E2A\u8282\u70B9\uFF0Ctest \u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u800C body \u548C orelse \u662F\u4E00\u4E2A\u8BED\u53E5\u5E8F\u5217\uFF08stmt\uFF09\uFF0C\u6240\u4EE5\u9700\u8981\u5206\u522B\u8C03\u7528 astfold_expr \u548C astfold_stmt \u51FD\u6570\u8FDB\u884C\u4F18\u5316\u3002</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">case If_kind:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">CALL</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">astfold_expr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expr_ty</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v.If.test</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">CALL_SEQ</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">astfold_stmt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> stmt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v.If.body</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">CALL_SEQ</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">astfold_stmt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> stmt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v.If.orelse</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="astfold-expr-\u8868\u8FBE\u5F0F\u6298\u53E0\u4F18\u5316" tabindex="-1">astfold_expr \u8868\u8FBE\u5F0F\u6298\u53E0\u4F18\u5316 <a class="header-anchor" href="#astfold-expr-\u8868\u8FBE\u5F0F\u6298\u53E0\u4F18\u5316" aria-hidden="true">#</a></h3><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">astfold_expr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr_ty </span><span style="color:#A6ACCD;">node_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ctx_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(++</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_depth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">recursion_limit</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">PyErr_SetString</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">PyExc_RecursionError</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">maximum recursion depth exceeded during compilation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> BoolOp_kind</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;">   // bool</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL_SEQ</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_expr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> expr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.BoolOp.values</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> BinOp_kind</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;"> // bin?</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_expr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> expr_ty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.BinOp.left</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">astfold_expr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> expr_ty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;">v.BinOp.right</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CALL</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">fold_binop</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> expr_ty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> node_</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><code>astfold_expr</code> \u51FD\u6570\u7684\u4F5C\u7528\u662F\u5BF9\u8BED\u6CD5\u6811\u7684 expr\uFF08\u8868\u8FBE\u5F0F\uFF09\u8FDB\u884C\u4F18\u5316\uFF0C\u5982\u679C expr \u7684\u7C7B\u578B\u662F BinOp_kind\uFF0C\u90A3\u4E48\u8C03\u7528 astfold_expr \u51FD\u6570\u5BF9 left \u548C right \u8FDB\u884C\u4F18\u5316\uFF0C\u7136\u540E\u8C03\u7528 fold_binop \u51FD\u6570\u5BF9 expr \u8FDB\u884C\u4F18\u5316\u3002astfold_expr \u662F\u4E00\u4E2A\u9012\u5F52\u7684\u64CD\u4F5C\uFF08\u6211\u4EEC\u53EF\u4EE5\u4E0D\u7528\u5173\u5FC3\u8FD9\u91CC\u7684\u9012\u5F52\uFF09\uFF0C\u6700\u7EC8\u8C03\u7528 fold_binop \u51FD\u6570\u5BF9 expr \u8FDB\u884C\u4F18\u5316\u3002</p><h3 id="\u7B80\u5355\u4E86\u89E3\u4E00\u4E0B-fold-binop-\u7684\u5B9E\u73B0" tabindex="-1">\u7B80\u5355\u4E86\u89E3\u4E00\u4E0B fold_binop \u7684\u5B9E\u73B0 <a class="header-anchor" href="#\u7B80\u5355\u4E86\u89E3\u4E00\u4E0B-fold-binop-\u7684\u5B9E\u73B0" aria-hidden="true">#</a></h3><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">fold_binop</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr_ty </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arena</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    expr_ty lhs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> rhs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    lhs </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BinOp</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    rhs </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BinOp</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">lhs</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> Constant_kind </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rhs</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> Constant_kind</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">lv </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lhs</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Constant</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">rv </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rhs</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Constant</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">newval </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BinOp</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">op</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> Add</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        newval </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PyNumber_Add</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">lv</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> rv</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// ... \u5176\u4ED6\u64CD\u4F5C\u7B26</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>fold_binop \u662F\u5BF9\u8868\u8FBE\u5F0F\u7684\u4F18\u5316\uFF0C\u5982\u679C\u8868\u8FBE\u5F0F\u7684\u5DE6\u53F3\u8282\u70B9\u90FD\u662F\u5E38\u91CF\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u5BF9\u8868\u8FBE\u5F0F\u8FDB\u884C\u6298\u53E0\u4F18\u5316\u3002\u5982 1 + 2\uFF0C\u53EF\u4EE5\u76F4\u63A5\u6298\u53E0\u6210 3\u3002\u8FD9\u4E2A\u64CD\u4F5C\u662F\u901A\u8FC7\u8C03\u7528 PyNumber_Add \u51FD\u6570\u6765\u5B9E\u73B0\u6570\u503C\u7684\u76F8\u52A0\uFF0C\u90A3\u4E48\u6700\u7EC8\u7684\u7ED3\u679C\u5C31\u662F\u4E00\u4E2A\u5E38\u91CF\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u9A8C\u8BC1\u8FD9\u4E2A\u4F18\u5316\uFF0C\u53EF\u4EE5\u901A\u8FC7 dis \u6A21\u5757\u6765\u67E5\u770B Python \u4EE3\u7801\u7684\u5B57\u8282\u7801\u3002</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> dis</span></span>
<span class="line"><span style="color:#A6ACCD;">code </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">a = 1 + 2</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">dis</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dis</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230 1 + 2 \u88AB\u4F18\u5316\u6210\u4E86 3\u3002\u8C03\u7528 a \u53D8\u6210\u4E86 LOAD_CONST\uFF0C\u5C06 3 \u52A0\u8F7D\u5230\u6808\u4E2D\uFF0C\u7136\u540E\u8C03\u7528 STORE_NAME \u5C06 3 \u5B58\u50A8\u5230 a \u4E2D\u3002\u8F93\u51FA\u5B57\u8282\u7801\u5982\u4E0B\uFF1A</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">  2           0 LOAD_CONST               0 (3)</span></span>
<span class="line"><span style="color:#A6ACCD;">              2 STORE_NAME               0 (a)</span></span>
<span class="line"><span style="color:#A6ACCD;">              4 LOAD_CONST               1 (None)</span></span>
<span class="line"><span style="color:#A6ACCD;">              6 RETURN_VALUE</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h3><ol><li>\u8BED\u6CD5\u6811\u7684\u4F18\u5316\u662F\u901A\u8FC7\u5C06\u8BED\u6CD5\u6811\u4E2D\u7684\u8282\u70B9\u8FDB\u884C\u6298\u53E0\uFF0C\u4ECE\u800C\u51CF\u5C11\u8BED\u6CD5\u6811\u7684\u8282\u70B9\u6570\uFF0C\u6700\u7EC8\u8FBE\u5230\u51CF\u5C11\u6267\u884C\u6307\u4EE4\u7684\u6B65\u9AA4\u3002\u8FD9\u6837\u53EF\u4EE5\u63D0\u9AD8 Python \u4EE3\u7801\u7684\u6267\u884C\u6548\u7387\u3002</li><li>\u4F18\u5316\u7684\u662F\u4E00\u4E2A\u9012\u5F52\u7684\u8FC7\u7A0B\uFF0C\u76F4\u5230\u6240\u6709\u7684\u8282\u70B9\u90FD\u88AB\u4F18\u5316\u3002</li><li>\u8BED\u6CD5\u6811\u4F18\u5316\u7684\u6700\u5C0F\u5355\u5143\u662F\u8868\u8FBE\u5F0F\u3002</li></ol>`,28),e=[o];function r(t,c,F,y,D,i){return a(),n("div",null,e)}const C=s(p,[["render",r]]);export{b as __pageData,C as default};
