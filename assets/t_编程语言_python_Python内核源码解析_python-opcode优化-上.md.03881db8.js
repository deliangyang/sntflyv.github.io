import{_ as s,c as n,o as a,a as l}from"./app.0ce55433.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"\u4F18\u5316\u5B9E\u73B0\u5165\u53E3","slug":"\u4F18\u5316\u5B9E\u73B0\u5165\u53E3","link":"#\u4F18\u5316\u5B9E\u73B0\u5165\u53E3","children":[]},{"level":3,"title":"\u57FA\u672C\u5757\u4F18\u5316","slug":"\u57FA\u672C\u5757\u4F18\u5316","link":"#\u57FA\u672C\u5757\u4F18\u5316","children":[]},{"level":3,"title":"\u6E05\u7406\u57FA\u672C\u5757","slug":"\u6E05\u7406\u57FA\u672C\u5757","link":"#\u6E05\u7406\u57FA\u672C\u5757","children":[]},{"level":3,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3","link":"#\u603B\u7ED3","children":[]}],"relativePath":"t/\u7F16\u7A0B\u8BED\u8A00/python/Python\u5185\u6838\u6E90\u7801\u89E3\u6790/python-opcode\u4F18\u5316-\u4E0A.md","lastUpdated":1729589704000}'),p={name:"t/\u7F16\u7A0B\u8BED\u8A00/python/Python\u5185\u6838\u6E90\u7801\u89E3\u6790/python-opcode\u4F18\u5316-\u4E0A.md"},o=l(`<p>Python \u5185\u6838\u6E90\u7801\u4E2D\u5B57\u8282\u7801\u7684\u4F18\u5316\u5B9E\u73B0\u5728\u6587\u4EF6<code>Python/compile.c</code>\u4E2D\uFF0CPython \u7684\u5B57\u8282\u7801\u4F18\u5316\u662F\u901A\u8FC7<code>peephole</code>\u4F18\u5316\u5668\u5B9E\u73B0\u7684\u3002<code>peephole</code>\u4F18\u5316\u5668\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u5C40\u90E8\u4F18\u5316\u5668\uFF0C\u5B83\u5BF9\u5B57\u8282\u7801\u8FDB\u884C\u626B\u63CF\uFF0C\u627E\u5230\u4E00\u4E9B\u53EF\u4EE5\u4F18\u5316\u7684\u5730\u65B9\uFF0C\u7136\u540E\u8FDB\u884C\u4F18\u5316\u3002<code>peephole</code>\u4F18\u5316\u5668\u7684\u5B9E\u73B0\u5728<code>Python/peephole.c</code>\u4E2D\u3002<code>peephole</code>\u53EB\u7AA5\u5B54\u4F18\u5316\uFF0C\u662F\u4E00\u79CD\u5C40\u90E8\u4F18\u5316\uFF0C\u5B83\u53EA\u5BF9\u4E00\u5C0F\u6BB5\u4EE3\u7801\u8FDB\u884C\u4F18\u5316\uFF0C\u800C\u4E0D\u662F\u5BF9\u6574\u4E2A\u7A0B\u5E8F\u8FDB\u884C\u4F18\u5316\u3002</p><p>compile.c \u5B9E\u73B0\u4E86 AST \u5230\u5B57\u8282\u7801\u7684\u7F16\u8BD1\u5668\uFF0C\u5B83\u7684\u5165\u53E3\u662F<code>PyAST_Compile</code>\u51FD\u6570\u3002<code>PyAST_Compile</code>\u51FD\u6570\u9996\u5148\u5C06 AST \u8F6C\u6362\u4E3A\u63A7\u5236\u6D41\u56FE\uFF0C\u7136\u540E\u5BF9\u63A7\u5236\u6D41\u56FE\u8FDB\u884C\u4F18\u5316\uFF0C\u6700\u540E\u5C06\u63A7\u5236\u6D41\u56FE\u8F6C\u6362\u4E3A\u5B57\u8282\u7801\u3002</p><p>compile.c \u4E2D\u7684\u4F18\u5316\u5B9E\u73B0\u5165\u53E3\u662F<code>optimize_cfg</code>\u51FD\u6570\uFF0C\u5B83\u5BF9\u5B57\u8282\u7801\u7684\u63A7\u5236\u6D41\u56FE\u8FDB\u884C\u4F18\u5316\u3002\u63A7\u5236\u6D41\u56FE\u662F\u4E00\u4E2A\u6709\u5411\u56FE\uFF0C\u56FE\u4E2D\u7684\u8282\u70B9\u662F\u57FA\u672C\u5757\uFF0C\u8FB9\u662F\u63A7\u5236\u6D41\u3002\u57FA\u672C\u5757\u662F\u4E00\u6BB5\u4EE3\u7801\uFF0C\u5B83\u6CA1\u6709\u5165\u53E3\uFF0C\u53EA\u6709\u4E00\u4E2A\u51FA\u53E3\u3002\u63A7\u5236\u6D41\u56FE\u662F\u4E00\u4E2A\u6709\u5411\u65E0\u73AF\u56FE\uFF0C\u5B83\u7684\u5165\u53E3\u662F\u51FD\u6570\u7684\u5165\u53E3\u57FA\u672C\u5757\uFF0C\u51FA\u53E3\u662F\u51FD\u6570\u7684\u51FA\u53E3\u57FA\u672C\u5757\u3002\u63A7\u5236\u6D41\u56FE\u7684\u4F18\u5316\u662F\u901A\u8FC7\u5BF9\u57FA\u672C\u5757\u8FDB\u884C\u4F18\u5316\u6765\u5B9E\u73B0\u7684\u3002</p><h3 id="\u4F18\u5316\u5B9E\u73B0\u5165\u53E3" tabindex="-1">\u4F18\u5316\u5B9E\u73B0\u5165\u53E3 <a class="header-anchor" href="#\u4F18\u5316\u5B9E\u73B0\u5165\u53E3" aria-hidden="true">#</a></h3><p><code>optimize_cfg</code>\u51FD\u6570\u662F\u5B57\u8282\u7801\u7684\u4F18\u5316\u5B9E\u73B0\u5165\u53E3\uFF0C\u5B83\u5BF9\u5B57\u8282\u7801\u7684\u63A7\u5236\u6D41\u56FE\u8FDB\u884C\u4F18\u5316\u3002<code>optimize_cfg</code>\u51FD\u6570\u7684\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">optimize_cfg</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> compiler </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> assembler </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">consts</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">basicblock </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">b </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">a_entry</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> b </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span><span style="color:#F07178;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_next</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">optimize_basic_block</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> consts</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">clean_basic_block</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_predecessors</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>optimize_cfg</code>\u51FD\u6570\u9996\u5148\u5BF9\u63A7\u5236\u6D41\u56FE\u4E2D\u7684\u6BCF\u4E2A\u57FA\u672C\u5757\u8FDB\u884C\u4F18\u5316\uFF0C\u7136\u540E\u5BF9\u57FA\u672C\u5757\u8FDB\u884C\u6E05\u7406\u3002<code>optimize_basic_block</code>\u51FD\u6570\u662F\u5BF9\u57FA\u672C\u5757\u8FDB\u884C\u4F18\u5316\u7684\u51FD\u6570\uFF0C\u5B83\u7684\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><h3 id="\u57FA\u672C\u5757\u4F18\u5316" tabindex="-1">\u57FA\u672C\u5757\u4F18\u5316 <a class="header-anchor" href="#\u57FA\u672C\u5757\u4F18\u5316" aria-hidden="true">#</a></h3><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">/* Optimization */</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">optimize_basic_block</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> compiler </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> basicblock </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">consts</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">PyList_CheckExact</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">consts</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> instr nop</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">nop</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> NOP</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> instr </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_iused</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> instr </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">inst </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> oparg </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">inst</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">i_oparg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> nextop </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_iused</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">is_jump</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">inst</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">            /* Skip over empty basic blocks. */</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">inst</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">i_target</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_iused</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#A6ACCD;">inst</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">i_target</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">inst</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">i_target</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">            target </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">inst</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">i_target</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            target </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">nop</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">inst</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">            /* Remove LOAD_CONST const; conditional jump */</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> LOAD_CONST</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                PyObject</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> cnt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> is_true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> jump_if_true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">switch</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">nextop</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> POP_JUMP_IF_FALSE</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> POP_JUMP_IF_TRUE</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                        cnt </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PyList_GET_ITEM</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">consts</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> oparg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">                        is_true </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PyObject_IsTrue</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">cnt</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">is_true </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#89DDFF;">goto</span><span style="color:#F07178;"> error</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#A6ACCD;">inst</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> NOP</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        jump_if_true </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> nextop </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> POP_JUMP_IF_TRUE</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">is_true </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> jump_if_true</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> JUMP_ABSOLUTE</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_nofallthrough</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> NOP</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> JUMP_IF_FALSE_OR_POP</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> JUMP_IF_TRUE_OR_POP</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                        cnt </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PyList_GET_ITEM</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">consts</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> oparg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">                        is_true </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PyObject_IsTrue</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">cnt</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">is_true </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#89DDFF;">goto</span><span style="color:#F07178;"> error</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                        jump_if_true </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> nextop </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> JUMP_IF_TRUE_OR_POP</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">is_true </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> jump_if_true</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> JUMP_ABSOLUTE</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_nofallthrough</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#A6ACCD;">inst</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> NOP</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> NOP</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">error:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div><p>\u5F53 opcode \u4E3A<code>LOAD_CONST</code>\u65F6\uFF0C\u5982\u679C\u4E0B\u4E00\u4E2A opcode \u662F<code>POP_JUMP_IF_FALSE</code>\u6216<code>POP_JUMP_IF_TRUE</code>\uFF0C\u5219\u53EF\u4EE5\u76F4\u63A5\u5224\u65AD<code>LOAD_CONST</code>\u7684\u503C\uFF0C\u7136\u540E\u6839\u636E\u5224\u65AD\u7ED3\u679C\u76F4\u63A5\u8DF3\u8F6C\u5230\u76EE\u6807\u4F4D\u7F6E\u3002\u8FD9\u6837\u5C31\u53EF\u4EE5\u51CF\u5C11\u4E00\u6761\u6307\u4EE4\u7684\u6267\u884C\u3002switch \u5206\u652F\u4E2D\u8FD8\u6709\u5176\u5B83\u7684\u6307\u4EE4\u4F18\u5316\u3002</p><h3 id="\u6E05\u7406\u57FA\u672C\u5757" tabindex="-1">\u6E05\u7406\u57FA\u672C\u5757 <a class="header-anchor" href="#\u6E05\u7406\u57FA\u672C\u5757" aria-hidden="true">#</a></h3><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span></span>
<span class="line"><span style="color:#82AAFF;">clean_basic_block</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">basicblock </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">prev_lineno</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">    /* Remove NOPs when legal to do so. */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> dest </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> src </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> src </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_iused</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> src</span><span style="color:#89DDFF;">++)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> lineno </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_lineno</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_opcode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> NOP</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">            /* Eliminate no-op if it doesn&#39;t have a line number */</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">lineno </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">continue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">            /* or, if the previous instruction had the same line number. */</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">prev_lineno </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> lineno</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">continue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">            /* or, if the next instruction has same line number or no line number */</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">src </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_iused</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> next_lineno </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_lineno</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">next_lineno </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> next_lineno </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> lineno</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_lineno</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> lineno</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">continue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                basicblock</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> next </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">next </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_iused</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    next </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">                /* or if last instruction in BB and next BB has same line number */</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">next</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">lineno </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">i_lineno</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">continue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">dest </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> src</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">dest</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_instr</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        dest</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">        prev_lineno </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> lineno</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">dest </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_iused</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">bb</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">b_iused</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> dest</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p><code>clean_basic_block</code>\u51FD\u6570\u7528\u4E8E\u6E05\u7406\u57FA\u672C\u5757\uFF0C\u5B83\u7684\u4F5C\u7528\u662F\u5220\u9664\u4E00\u4E9B\u4E0D\u5FC5\u8981\u7684\u6307\u4EE4\u3002\u6BD4\u5982\uFF0C\u5220\u9664\u4E00\u4E9B\u6CA1\u6709\u610F\u4E49\u7684<code>NOP</code>\u6307\u4EE4\u3002</p><h3 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h3><p>Python \u7684\u5B57\u8282\u7801\u4F18\u5316\u662F\u901A\u8FC7<code>peephole</code>\u4F18\u5316\u5668\u5B9E\u73B0\u7684\uFF0C\u5B83\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u5C40\u90E8\u4F18\u5316\u5668\uFF0C\u5BF9\u5B57\u8282\u7801\u8FDB\u884C\u626B\u63CF\uFF0C\u627E\u5230\u4E00\u4E9B\u53EF\u4EE5\u4F18\u5316\u7684\u5730\u65B9\uFF0C\u7136\u540E\u8FDB\u884C\u4F18\u5316\u3002</p>`,15),e=[o];function c(r,t,F,y,D,i){return a(),n("div",null,e)}const A=s(p,[["render",c]]);export{C as __pageData,A as default};
