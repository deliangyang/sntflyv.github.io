import{_ as s,c as n,o as a,a as l}from"./app.0ce55433.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"fold_binop","slug":"fold-binop","link":"#fold-binop","children":[]},{"level":3,"title":"make_const","slug":"make-const","link":"#make-const","children":[]},{"level":3,"title":"fold_unaryop","slug":"fold-unaryop","link":"#fold-unaryop","children":[]},{"level":3,"title":"fold_iter","slug":"fold-iter","link":"#fold-iter","children":[]},{"level":3,"title":"fold_compare","slug":"fold-compare","link":"#fold-compare","children":[]},{"level":3,"title":"fold_subscr","slug":"fold-subscr","link":"#fold-subscr","children":[]},{"level":3,"title":"fold_tuple","slug":"fold-tuple","link":"#fold-tuple","children":[]},{"level":2,"title":"\u601D\u8003","slug":"\u601D\u8003","link":"#\u601D\u8003","children":[]}],"relativePath":"t/\u7F16\u7A0B\u8BED\u8A00/python/Python\u5185\u6838\u6E90\u7801\u89E3\u6790/python-ast\u4F18\u5316\u6DF1\u5165\u7814\u7A76.md","lastUpdated":1729589704000}'),p={name:"t/\u7F16\u7A0B\u8BED\u8A00/python/Python\u5185\u6838\u6E90\u7801\u89E3\u6790/python-ast\u4F18\u5316\u6DF1\u5165\u7814\u7A76.md"},o=l(`<p>\u901A\u8FC7\u8FD9\u7BC7\u6587\u7AE0\u6211\u4EEC\u521D\u6B65\u4E86\u89E3\u4E86\u4E00\u4E0B Python \u8BED\u6CD5\u6811\u7684\u4F18\u5316\uFF0C\u300A<a href="https://mp.weixin.qq.com/s/0jSuisQc80ukNYmhXSBwRw" target="_blank" rel="noreferrer">Python \u5185\u6838\u6E90\u7801\u89E3\u6790\uFF1A\u521D\u6B65\u4E86\u89E3\u8BED\u6CD5\u6811 AST \u4F18\u5316\u7684\u8FC7\u7A0B</a>\u300B\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u5C06\u7EE7\u7EED\u6DF1\u5165\u7814\u7A76 Python \u8BED\u6CD5\u6811\u7684\u4F18\u5316\u8FC7\u7A0B\u3002</p><p>\u9664\u4E86\u5E38\u91CF\u6298\u53E0\u4F18\u5316\u5916\uFF0CPython \u8FD8\u6709\u5176\u5B83\u7684\u8BED\u6CD5\u6811\u4F18\u5316\u624B\u6BB5\u3002</p><h3 id="fold-binop" tabindex="-1">fold_binop <a class="header-anchor" href="#fold-binop" aria-hidden="true">#</a></h3><p>\u5982\u679C\u8868\u8FBE\u5F0F\u7684\u5DE6\u503C\u548C\u53F3\u503C\u90FD\u662F\u5E38\u91CF\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5BF9\u8868\u8FBE\u5F0F\u8FDB\u884C\u6298\u53E0\u4F18\u5316\u3002\u5982 1 + 2\uFF0C\u53EF\u4EE5\u76F4\u63A5\u6298\u53E0\u6210 3\u3002\u8FD9\u4E2A\u64CD\u4F5C\u662F\u901A\u8FC7\u8C03\u7528 PyNumber_Add \u51FD\u6570\u6765\u5B9E\u73B0\u6570\u503C\u7684\u76F8\u52A0\uFF0C\u90A3\u4E48\u6700\u7EC8\u7684\u7ED3\u679C\u5C31\u662F\u4E00\u4E2A\u5E38\u91CF\u3002\u9664\u4E86\u52A0\u6CD5\u5916\uFF0C\u8FD8\u6709\u51CF\u6CD5\u3001\u4E58\u6CD5\u3001\u9664\u6CD5\u3001\u4F4D\u8FD0\u7B97\u7B49\u64CD\u4F5C\u3002\u7531\u4E8E\u4E0A\u4E00\u7BC7\u6587\u7AE0\u5DF2\u7ECF\u4ECB\u7ECD\u4E86\u8FD9\u79CD\u6298\u53E0\u4F18\u5316\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u518D\u8D58\u8FF0\u3002</p><h3 id="make-const" tabindex="-1">make_const <a class="header-anchor" href="#make-const" aria-hidden="true">#</a></h3><p>\u65B0\u7684 val \u662F\u88AB\u8BA1\u7B97\u51FA\u6765\u7684\u4E00\u4E2A\u5E38\u91CF\uFF0C\u5982\u679C val \u4E3A NULL\uFF0C\u8FD9\u8DF3\u8FC7\u3002\u5982\u679C val \u4E0D\u4E3A\u7A7A\uFF0C\u5219\u9700\u8981\u7ED9 val \u5206\u914D\u65B0\u7684\u5185\u5B58\uFF0C\u5C06 val \u8D4B\u503C\u7ED9 node \u7684 Constant.value\uFF0C\u5E76\u5C06 node \u7684 kind\uFF08\u7C7B\u578B\uFF09\u8BBE\u7F6E\u4E3A Constant_kind\u3002</p><p>make_const \u5728\u5F88\u591A\u5730\u65B9\u90FD\u4F1A\u88AB\u8C03\u7528\uFF0C\u5982 fold_binop\u3001fold_unaryop\u3001fold_iter\u3001fold_compare\u3001fold_subscr\u3001fold_tuple \u7B49\u51FD\u6570\u4E2D\u3002</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">make_const</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr_ty </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arena</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Even if no new value was calculated, make_const may still</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// need to clear an error (e.g. for division by zero)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">val </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">PyErr_ExceptionMatches</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">PyExc_KeyboardInterrupt</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">PyErr_Clear</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">_PyArena_AddPyObject</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">arena</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">Py_DECREF</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> Constant_kind</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Constant</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Constant</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="fold-unaryop" tabindex="-1">fold_unaryop <a class="header-anchor" href="#fold-unaryop" aria-hidden="true">#</a></h3><p>\u4E00\u5143\u8FD0\u7B97\u64CD\u4F5C\u7B26\u7684\u6298\u53E0\u4F18\u5316\uFF0C\u5982 not\u3001-\u3001+\u3001~ \u7B49\u64CD\u4F5C\u7B26\u3002\u5982\u679C\u64CD\u4F5C\u6570\u4E0D\u662F\u5E38\u91CF\uFF0C\u90A3\u4E48\u76F4\u63A5\u8FD4\u56DE\u3002\u5426\u5219\uFF0C\u6839\u636E\u64CD\u4F5C\u7B26\u7684\u7C7B\u578B\uFF0C\u8C03\u7528\u5BF9\u5E94\u7684\u51FD\u6570\u8FDB\u884C\u8BA1\u7B97\u3002\u5982 not \u64CD\u4F5C\u7B26\uFF0C\u8C03\u7528 unary_not \u51FD\u6570\uFF0C- \u64CD\u4F5C\u7B26\uFF0C\u8C03\u7528 PyNumber_Negative \u51FD\u6570\uFF0C+ \u64CD\u4F5C\u7B26\uFF0C\u8C03\u7528 PyNumber_Positive \u51FD\u6570\uFF0C~ \u64CD\u4F5C\u7B26\uFF0C\u8C03\u7528 PyNumber_Invert \u51FD\u6570\u3002</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">fold_unaryop</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr_ty </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arena</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    expr_ty arg </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UnaryOp</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">operand</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> Constant_kind</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">        /* Fold not into comparison */</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UnaryOp</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">op</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> Not </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> Compare_kind </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">asdl_seq_LEN</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Compare</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">ops</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">            /* Eq and NotEq are often implemented in terms of one another, so</span></span>
<span class="line"><span style="color:#676E95;">               folding not (self == other) into self != other breaks implementation</span></span>
<span class="line"><span style="color:#676E95;">               of !=. Detecting such cases doesn&#39;t seem worthwhile.</span></span>
<span class="line"><span style="color:#676E95;">               Python uses &lt;/&gt; for &#39;is subset&#39;/&#39;is superset&#39; operations on sets.</span></span>
<span class="line"><span style="color:#676E95;">               They don&#39;t satisfy not folding laws. */</span></span>
<span class="line"><span style="color:#F07178;">            cmpop_ty op </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">asdl_seq_GET</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Compare</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">ops</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">op</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> Is</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                op </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> IsNot</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> IsNot</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                op </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> Is</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> In</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                op </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> NotIn</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> NotIn</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                op </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> In</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// The remaining comparison operators can&#39;t be safely inverted</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> Eq</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> NotEq</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> Lt</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> LtE</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> Gt</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">case</span><span style="color:#F07178;"> GtE</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">                op </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;"> // The AST enums leave &quot;0&quot; free as an &quot;unused&quot; marker</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// No default case, so the compiler will emit a warning if new</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// comparison operators are added without being handled here</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">op</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">asdl_seq_SET</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Compare</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">ops</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> op</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">COPY_NODE</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">node</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#F78C6C;">typedef</span><span style="color:#F07178;"> PyObject </span><span style="color:#89DDFF;">*(*</span><span style="color:#F07178;">unary_op</span><span style="color:#89DDFF;">)(</span><span style="color:#F07178;">PyObject</span><span style="color:#89DDFF;">*);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> unary_op ops</span><span style="color:#C792EA;">[]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">Invert</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> PyNumber_Invert</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;">     // ~</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">Not</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> unary_not</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;">              // not</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">UAdd</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> PyNumber_Positive</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;">     // +</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">USub</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> PyNumber_Negative</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;">     // -</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">newval </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ops</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UnaryOp</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">op</span><span style="color:#89DDFF;">](</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Constant</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">make_const</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">node</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> newval</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> arena</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>Python \u4F18\u5316\u793A\u4F8B\uFF0C\u6309\u8BED\u6CD5\u6765\u8BF4\uFF0Cnot 1\u3001~ 1\u3001- 1\u3001+ 1 \u90FD\u662F\u7531\u4E24\u4E2A\u90E8\u5206\u7EC4\u6210\u7684\uFF0C\u4E00\u4E2A\u662F\u64CD\u4F5C\u7B26\uFF0C\u4E00\u4E2A\u662F\u64CD\u4F5C\u6570\u3002\u5728 Python \u8BED\u6CD5\u6811\u4E2D\uFF0C\u8FD9\u4E9B\u64CD\u4F5C\u7B26\u90FD\u662F\u4E00\u5143\u64CD\u4F5C\u7B26\uFF0C\u64CD\u4F5C\u6570\u90FD\u662F\u5E38\u91CF\u3002\u5728 Python \u8BED\u6CD5\u6811\u4F18\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u64CD\u4F5C\u6570\u662F\u5E38\u91CF\uFF0C\u5219\u53EF\u4EE5\u76F4\u63A5\u8BA1\u7B97\u51FA\u7ED3\u679C\u3002\u5982\u4E0B\u6240\u793A\uFF0Cnot 1\u3001~ 1\u3001- 1\u3001+ 1 \u90FD\u88AB\u4F18\u5316\u6210\u4E86\u5E38\u91CF\u3002</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> dis</span></span>
<span class="line"><span style="color:#A6ACCD;">code </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">a = not 1</span></span>
<span class="line"><span style="color:#C3E88D;">b = ~ 1</span></span>
<span class="line"><span style="color:#C3E88D;">c = - 1</span></span>
<span class="line"><span style="color:#C3E88D;">d = + 1</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">dis</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dis</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4F18\u5316\u540E\u7684\u5B57\u8282\u7801</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">  2           0 LOAD_CONST               0 (False)</span></span>
<span class="line"><span style="color:#A6ACCD;">              2 STORE_NAME               0 (a)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  3           4 LOAD_CONST               1 (-2)</span></span>
<span class="line"><span style="color:#A6ACCD;">              6 STORE_NAME               1 (b)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  4           8 LOAD_CONST               2 (-1)</span></span>
<span class="line"><span style="color:#A6ACCD;">             10 STORE_NAME               2 (c)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  5          12 LOAD_CONST               3 (1)</span></span>
<span class="line"><span style="color:#A6ACCD;">             14 STORE_NAME               3 (d)</span></span>
<span class="line"><span style="color:#A6ACCD;">             16 LOAD_CONST               4 (None)</span></span>
<span class="line"><span style="color:#A6ACCD;">             18 RETURN_VALUE</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="fold-iter" tabindex="-1">fold_iter <a class="header-anchor" href="#fold-iter" aria-hidden="true">#</a></h3><p>\u5BF9\u4E8E\u5217\u8868\u548C\u96C6\u5408\uFF0C\u5982\u679C\u5217\u8868\u6216\u96C6\u5408\u4E2D\u5305\u542B\u661F\u53F7\u8868\u8FBE\u5F0F\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u3002\u5426\u5219\uFF0C\u5C06\u5217\u8868\u6216\u96C6\u5408\u8F6C\u6362\u6210\u5143\u7EC4\u6216\u51BB\u7ED3\u96C6\u5408\u3002\u5982\u679C\u8F6C\u6362\u6210\u529F\uFF0C\u5219\u5C06\u65B0\u7684\u503C\u8D4B\u503C\u7ED9 node \u7684 Constant.value\uFF0C\u5E76\u5C06 node \u7684\u7C7B\u578B\u8BBE\u7F6E\u4E3A Constant_kind\u3002</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">fold_iter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr_ty </span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arena</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">newval</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> List_kind</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">        /* First change a list into tuple. */</span></span>
<span class="line"><span style="color:#F07178;">        asdl_expr_seq </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">elts </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">List</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">elts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">Py_ssize_t</span><span style="color:#F07178;"> n </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">asdl_seq_LEN</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">elts</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Py_ssize_t</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            expr_ty e </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">expr_ty</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">asdl_seq_GET</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">elts</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> Starred_kind</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        expr_context_ty ctx </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">List</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> Tuple_kind</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tuple</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">elts</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> elts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tuple</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> ctx</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">        /* Try to create a constant tuple. */</span></span>
<span class="line"><span style="color:#F07178;">        newval </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">make_const_tuple</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">elts</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> Set_kind</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        newval </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">make_const_tuple</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Set</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">elts</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">newval</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">Py_SETREF</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">newval</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PyFrozenSet_New</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">newval</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">make_const</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">arg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> newval</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> arena</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>fold_iter \u9700\u8981\u4E00\u5B9A\u7684\u6761\u4EF6\u624D\u4F1A\u88AB\u89E6\u53D1\u4F18\u5316\u3002</p><h3 id="fold-compare" tabindex="-1">fold_compare <a class="header-anchor" href="#fold-compare" aria-hidden="true">#</a></h3><p>\u5BF9\u4E8E\u6BD4\u8F83\u64CD\u4F5C\u7B26\uFF0C\u5982\u679C\u64CD\u4F5C\u7B26\u662F in \u6216 not in\uFF0C\u4E14\u6BD4\u8F83\u7684\u5BF9\u8C61\u662F\u5217\u8868\u6216\u96C6\u5408\uFF0C\u5219\u5C06\u5217\u8868\u6216\u96C6\u5408\u8F6C\u6362\u6210\u5143\u7EC4\u6216\u51BB\u7ED3\u96C6\u5408\u3002\u5982\u679C\u8F6C\u6362\u6210\u529F\uFF0C\u5219\u5C06\u65B0\u7684\u503C\u8D4B\u503C\u7ED9 node \u7684 Constant.value\uFF0C\u5E76\u5C06 node \u7684\u7C7B\u578B\u8BBE\u7F6E\u4E3A Constant_kind\u3002</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">fold_compare</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr_ty </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arena</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    asdl_int_seq </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">ops</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    asdl_expr_seq </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">args</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">Py_ssize_t</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    ops </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Compare</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">ops</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    args </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Compare</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">comparators</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">    /* TODO: optimize cases with literal arguments. */</span></span>
<span class="line"><span style="color:#676E95;">    /* Change literal list or set in &#39;in&#39; or &#39;not in&#39; into</span></span>
<span class="line"><span style="color:#676E95;">       tuple or frozenset respectively. */</span></span>
<span class="line"><span style="color:#F07178;">    i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">asdl_seq_LEN</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ops</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> op </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">asdl_seq_GET</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ops</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">op </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> In </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> op </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> NotIn</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#82AAFF;">fold_iter</span><span style="color:#89DDFF;">((</span><span style="color:#F07178;">expr_ty</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">asdl_seq_GET</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">args</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> arena</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> state</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>Python \u793A\u4F8B</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> dis</span></span>
<span class="line"><span style="color:#A6ACCD;">code </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">1 in [1, 2, 3]</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">dis</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dis</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4F18\u5316\u540E\u7684\u5B57\u8282\u7801\uFF0C\u53EF\u4EE5\u770B\u5230\u5217\u8868\u88AB\u4F18\u5316\u6210\u4E86\u5143\u7EC4\uFF0C\u5143\u7EC4\u7684\u503C\u662F\u5E38\u91CF\u3002</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">  2           0 LOAD_CONST               0 (1)</span></span>
<span class="line"><span style="color:#A6ACCD;">              2 LOAD_CONST               1 ((1, 2, 3))</span></span>
<span class="line"><span style="color:#A6ACCD;">              4 CONTAINS_OP              0</span></span>
<span class="line"><span style="color:#A6ACCD;">              6 RETURN_VALUE</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="fold-subscr" tabindex="-1">fold_subscr <a class="header-anchor" href="#fold-subscr" aria-hidden="true">#</a></h3><p>\u5BF9\u4E8E\u4E0B\u6807\u64CD\u4F5C\u7B26\uFF0C\u5982\u679C\u4E0B\u6807\u64CD\u4F5C\u7B26\u7684\u4E0A\u4E0B\u6587\u4E0D\u662F Load\uFF0C\u6216\u8005\u4E0B\u6807\u64CD\u4F5C\u7B26\u7684\u503C\u548C\u4E0B\u6807\u4E0D\u662F\u5E38\u91CF\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u3002\u5426\u5219\uFF0C\u8C03\u7528 PyObject_GetItem \u51FD\u6570\u83B7\u53D6\u65B0\u7684\u503C\u3002\u5982\u679C\u83B7\u53D6\u6210\u529F\uFF0C\u5219\u5C06\u65B0\u7684\u503C\u8D4B\u503C\u7ED9 node \u7684 Constant.value\uFF0C\u5E76\u5C06 node \u7684\u7C7B\u578B\u8BBE\u7F6E\u4E3A Constant_kind\u3002</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">fold_subscr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr_ty </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arena</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">newval</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    expr_ty arg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> idx</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    arg </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Subscript</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    idx </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Subscript</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">slice</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Subscript</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> Load </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> Constant_kind </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">idx</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">kind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> Constant_kind</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    newval </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PyObject_GetItem</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Constant</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">idx</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Constant</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">make_const</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">node</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> newval</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> arena</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> ast</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> dis</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">code </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;&quot;\\</span></span>
<span class="line"><span style="color:#C3E88D;">1 in [1, 2, 3]</span></span>
<span class="line"><span style="color:#C3E88D;">4 not in [2]</span></span>
<span class="line"><span style="color:#C3E88D;">for i in [3]:</span></span>
<span class="line"><span style="color:#C3E88D;">    pass</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ast</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dump</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ast</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">mode</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">exec</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">indent</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#676E95;"># Module(</span></span>
<span class="line"><span style="color:#676E95;">#     body=[</span></span>
<span class="line"><span style="color:#676E95;">#         Expr(</span></span>
<span class="line"><span style="color:#676E95;">#             value=Compare(</span></span>
<span class="line"><span style="color:#676E95;">#                 left=Constant(value=1),</span></span>
<span class="line"><span style="color:#676E95;">#                 ops=[</span></span>
<span class="line"><span style="color:#676E95;">#                     In()],</span></span>
<span class="line"><span style="color:#676E95;">#                 comparators=[</span></span>
<span class="line"><span style="color:#676E95;">#                     List(</span></span>
<span class="line"><span style="color:#676E95;">#                         elts=[</span></span>
<span class="line"><span style="color:#676E95;">#                             Constant(value=1),</span></span>
<span class="line"><span style="color:#676E95;">#                             Constant(value=2),</span></span>
<span class="line"><span style="color:#676E95;">#                             Constant(value=3)],</span></span>
<span class="line"><span style="color:#676E95;">#                         ctx=Load())])),</span></span>
<span class="line"><span style="color:#676E95;">#         Expr(</span></span>
<span class="line"><span style="color:#676E95;">#             value=Compare(</span></span>
<span class="line"><span style="color:#676E95;">#                 left=Constant(value=4),</span></span>
<span class="line"><span style="color:#676E95;">#                 ops=[</span></span>
<span class="line"><span style="color:#676E95;">#                     NotIn()],</span></span>
<span class="line"><span style="color:#676E95;">#                 comparators=[</span></span>
<span class="line"><span style="color:#676E95;">#                     List(</span></span>
<span class="line"><span style="color:#676E95;">#                         elts=[</span></span>
<span class="line"><span style="color:#676E95;">#                             Constant(value=2)],</span></span>
<span class="line"><span style="color:#676E95;">#                         ctx=Load())])),</span></span>
<span class="line"><span style="color:#676E95;">#         For(</span></span>
<span class="line"><span style="color:#676E95;">#             target=Name(id=&#39;i&#39;, ctx=Store()),</span></span>
<span class="line"><span style="color:#676E95;">#             iter=List(</span></span>
<span class="line"><span style="color:#676E95;">#                 elts=[</span></span>
<span class="line"><span style="color:#676E95;">#                     Constant(value=3)],</span></span>
<span class="line"><span style="color:#676E95;">#                 ctx=Load()),</span></span>
<span class="line"><span style="color:#676E95;">#             body=[</span></span>
<span class="line"><span style="color:#676E95;">#                 Pass()],</span></span>
<span class="line"><span style="color:#676E95;">#             orelse=[])],</span></span>
<span class="line"><span style="color:#676E95;">#     type_ignores=[])</span></span>
<span class="line"><span style="color:#A6ACCD;">dis</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dis</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;">#   1           0 LOAD_CONST               0 (1)</span></span>
<span class="line"><span style="color:#676E95;">#               2 LOAD_CONST               1 ((1, 2, 3))</span></span>
<span class="line"><span style="color:#676E95;">#               4 CONTAINS_OP              0</span></span>
<span class="line"><span style="color:#676E95;">#               6 POP_TOP</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#   2           8 LOAD_CONST               2 (4)</span></span>
<span class="line"><span style="color:#676E95;">#              10 LOAD_CONST               3 ((2,))</span></span>
<span class="line"><span style="color:#676E95;">#              12 CONTAINS_OP              1</span></span>
<span class="line"><span style="color:#676E95;">#              14 POP_TOP</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#   3          16 LOAD_CONST               4 ((3,))</span></span>
<span class="line"><span style="color:#676E95;">#              18 GET_ITER</span></span>
<span class="line"><span style="color:#676E95;">#         &gt;&gt;   20 FOR_ITER                 2 (to 26)</span></span>
<span class="line"><span style="color:#676E95;">#              22 STORE_NAME               0 (i)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#   4          24 JUMP_ABSOLUTE           10 (to 20)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">#   3     &gt;&gt;   26 LOAD_CONST               5 (None)</span></span>
<span class="line"><span style="color:#676E95;">#              28 RETURN_VALUE</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><p>\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u53EF\u4EE5\u770B\u5230\u4E0B\u6807\u64CD\u4F5C\u7B26\u7684\u6298\u53E0\u4F18\u5316\uFF0C\u5B57\u7B26\u4E32\u7684\u4E0B\u6807\u76F4\u63A5\u8FD4\u56DE\u5BF9\u5E94\u7684\u5B57\u7B26\u3002</p><p>\u6253\u5370\u51FA\u6765\u7684\u62BD\u8C61\u8BED\u6CD5\u6811\u53EF\u4EE5\u770B\u5230\uFF0C\u8BED\u6CD5\u6811\u7ED3\u6784\u4E0D\u6EE1\u8DB3\u9000\u51FA\u7684\u5224\u65AD\u6761\u4EF6\uFF0C\u901A\u8FC7\u6267\u884C PyObject_GetItem \u83B7\u53D6\u5230\u4E0B\u6807\u5BF9\u5E94\u7684\u5B57\u7B26\u3002</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> ast</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> dis</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">code </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;&quot;\\</span></span>
<span class="line"><span style="color:#C3E88D;">&quot;1223&quot;[1]</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ast</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dump</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ast</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">mode</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">eval</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">indent</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#676E95;"># Expression(</span></span>
<span class="line"><span style="color:#676E95;">#     body=Subscript(</span></span>
<span class="line"><span style="color:#676E95;">#         value=Constant(value=&#39;1223&#39;),</span></span>
<span class="line"><span style="color:#676E95;">#         slice=Constant(value=1),</span></span>
<span class="line"><span style="color:#676E95;">#         ctx=Load()))</span></span>
<span class="line"><span style="color:#A6ACCD;">dis</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dis</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;">#   1           0 LOAD_CONST               0 (&#39;2&#39;)</span></span>
<span class="line"><span style="color:#676E95;">#               2 RETURN_VALUE</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="fold-tuple" tabindex="-1">fold_tuple <a class="header-anchor" href="#fold-tuple" aria-hidden="true">#</a></h3><p>\u5BF9\u4E8E\u5143\u7EC4\uFF0C\u5982\u679C\u5143\u7EC4\u7684\u4E0A\u4E0B\u6587\u4E0D\u662F Load\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u3002\u5426\u5219\uFF0C\u8C03\u7528 make_const_tuple \u51FD\u6570\u5C06\u5143\u7EC4\u8F6C\u6362\u6210\u5E38\u91CF\u5143\u7EC4\u3002\u5982\u679C\u8F6C\u6362\u6210\u529F\uFF0C\u5219\u5C06\u65B0\u7684\u503C\u8D4B\u503C\u7ED9 node \u7684 Constant.value\uFF0C\u5E76\u5C06 node \u7684\u7C7B\u578B\u8BBE\u7F6E\u4E3A Constant_kind\u3002</p><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#82AAFF;">fold_tuple</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">expr_ty </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PyArena </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arena</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _PyASTOptimizeState </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    PyObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">newval</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tuple</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> Load</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    newval </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">make_const_tuple</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tuple</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">elts</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">make_const</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">node</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> newval</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> arena</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5982\u4E0B\u793A\u4F8B\u53EF\u4EE5\u770B\u5230\u5143\u7EC4\u7684\u6298\u53E0\u4F18\u5316\uFF0C\u76F4\u63A5\u8FD4\u56DE\u5BF9\u5E94\u7684\u5E38\u91CF\u503C\u3002</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> ast</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> dis</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">code </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;&quot;\\</span></span>
<span class="line"><span style="color:#C3E88D;">(1, 2, 3)</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ast</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dump</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ast</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">mode</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">exec</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">indent</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#676E95;"># Module(</span></span>
<span class="line"><span style="color:#676E95;">#     body=[</span></span>
<span class="line"><span style="color:#676E95;">#         Expr(</span></span>
<span class="line"><span style="color:#676E95;">#             value=Tuple(</span></span>
<span class="line"><span style="color:#676E95;">#                 elts=[</span></span>
<span class="line"><span style="color:#676E95;">#                     Constant(value=1),</span></span>
<span class="line"><span style="color:#676E95;">#                     Constant(value=2),</span></span>
<span class="line"><span style="color:#676E95;">#                     Constant(value=3)],</span></span>
<span class="line"><span style="color:#676E95;">#                 ctx=Load()))],</span></span>
<span class="line"><span style="color:#676E95;">#     type_ignores=[])</span></span>
<span class="line"><span style="color:#A6ACCD;">dis</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dis</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">code</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;">#   1           0 LOAD_CONST               0 ((1, 2, 3))</span></span>
<span class="line"><span style="color:#676E95;">#               2 RETURN_VALUE</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="\u601D\u8003" tabindex="-1">\u601D\u8003 <a class="header-anchor" href="#\u601D\u8003" aria-hidden="true">#</a></h2><p>\u901A\u8FC7\u8FD9\u7BC7\u6587\u7AE0\uFF0C\u6211\u4EEC\u4E86\u89E3\u4E86 Python \u8BED\u6CD5\u6811\u7684\u4F18\u5316\u8FC7\u7A0B\u3002\u5728 Python \u8BED\u6CD5\u6811\u7684\u4F18\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u6709\u5F88\u591A\u79CD\u4F18\u5316\u624B\u6BB5\uFF0C\u5982\u5E38\u91CF\u6298\u53E0\u4F18\u5316\u3001\u4E00\u5143\u8FD0\u7B97\u64CD\u4F5C\u7B26\u7684\u6298\u53E0\u4F18\u5316\u3001\u5217\u8868\u548C\u96C6\u5408\u7684\u6298\u53E0\u4F18\u5316\u3001\u6BD4\u8F83\u64CD\u4F5C\u7B26\u7684\u6298\u53E0\u4F18\u5316\u3001\u4E0B\u6807\u64CD\u4F5C\u7B26\u7684\u6298\u53E0\u4F18\u5316\u3001\u5143\u7EC4\u7684\u6298\u53E0\u4F18\u5316\u7B49\u3002\u8FD9\u4E9B\u4F18\u5316\u624B\u6BB5\u53EF\u4EE5\u6709\u6548\u5730\u63D0\u9AD8 Python \u7A0B\u5E8F\u7684\u6267\u884C\u6548\u7387\u3002</p><p>\u5B9E\u9645\u4E0A\u8BED\u6CD5\u6811\u8FD8\u6709\u5F88\u591A\u7684\u4F18\u5316\u6280\u672F\uFF0C\u5982\u5E38\u91CF\u6298\u53E0\u3001\u5FAA\u73AF\u5C55\u5F00\u3001\u5FAA\u73AF\u4E0D\u53D8\u91CF\u5916\u63D0\u3001\u5FAA\u73AF\u5408\u5E76\u3001\u5FAA\u73AF\u5206\u88C2\u3001\u5FAA\u73AF\u6D88\u9664\u3001\u5FAA\u73AF\u5212\u5206\u3001\u5FAA\u73AF\u4EA4\u6362\u3001\u5FAA\u73AF\u5C55\u5F00\u3001\u5FAA\u73AF\u878D\u5408\u3001\u5FAA\u73AF\u6EDA\u52A8\u3001\u5FAA\u73AF\u5265\u79BB\u3001\u5FAA\u73AF\u5206\u5757\u3001\u5FAA\u73AF\u5206\u89E3\u3001\u5FAA\u73AF\u5206\u5757\u3001\u5FAA\u73AF\u5206\u89E3\u7B49\u7B49</p><p>\u5982\u4E0B\u7B80\u5355\u7684\u4E86\u89E3\u4E00\u4E0B Python \u6CA1\u6709\u505A\u5230\u7684\u4F18\u5316\u3002\u5FAA\u73AF\u6D88\u9664\uFF0C\u5FAA\u73AF 0 \u6B21\u6BEB\u65E0\u610F\u4E49\uFF0C\u4F46\u662F Python \u5374\u751F\u6210\u4E86\u5F88\u591A\u7684\u5B57\u8282\u7801\u3002</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8F93\u51FA\u7684\u5B57\u8282\u7801\u5982\u4E0B</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">  2           0 LOAD_NAME                0 (range)</span></span>
<span class="line"><span style="color:#A6ACCD;">              2 LOAD_CONST               0 (0)</span></span>
<span class="line"><span style="color:#A6ACCD;">              4 CALL_FUNCTION            1</span></span>
<span class="line"><span style="color:#A6ACCD;">              6 GET_ITER</span></span>
<span class="line"><span style="color:#A6ACCD;">        &gt;&gt;    8 FOR_ITER                 6 (to 22)</span></span>
<span class="line"><span style="color:#A6ACCD;">             10 STORE_NAME               1 (i)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  3          12 LOAD_NAME                2 (print)</span></span>
<span class="line"><span style="color:#A6ACCD;">             14 LOAD_CONST               1 (1)</span></span>
<span class="line"><span style="color:#A6ACCD;">             16 CALL_FUNCTION            1</span></span>
<span class="line"><span style="color:#A6ACCD;">             18 POP_TOP</span></span>
<span class="line"><span style="color:#A6ACCD;">             20 JUMP_ABSOLUTE            4 (to 8)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  2     &gt;&gt;   22 LOAD_CONST               2 (None)</span></span>
<span class="line"><span style="color:#A6ACCD;">             24 RETURN_VALUE</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,45),e=[o];function r(c,t,F,y,D,i){return a(),n("div",null,e)}const C=s(p,[["render",r]]);export{A as __pageData,C as default};
